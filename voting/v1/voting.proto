syntax = "proto3";

option go_package = ".;votingpb";
package voting.v1;

service VotingService {
    rpc CreatePoll(CreatePollRequest) returns (CreatePollResponse) {}
    rpc Poll(PollRequest) returns (PollResponse) {}
    rpc OpenPoll(OpenPollRequest) returns (OpenPollResponse) {}
    rpc EndPoll(EndPollRequest) returns (EndPollResponse) {}
    rpc Choices(ChoicesRequest) returns (ChoicesResponse) {}
    rpc Vote(VoteRequest) returns (VoteResponse) {}
    rpc Ballot(BallotRequest) returns (BallotResponse) {}
    rpc Count(CountRequest) returns (CountResponse) {}
    rpc Export(ExportRequest) returns (ExportResponse) {}
}

message Candidate {
    string id = 1;
    string name = 2;
    string url = 3;
}

message CreatePollRequest {
    string title = 1;
    bool ranked = 2;
    repeated Candidate candidates = 3;
    int64 expires = 4;
}

message CreatePollResponse {
    Poll poll = 1;
}

message PollRequest {
    string id = 1;
}

message PollResponse {
    Poll poll = 1;
}

message BallotRequest {
    string poll_id = 1;
}

message BallotResponse {
    repeated RankedChoice ranked_choices = 1;
}

message ChoicesRequest {
    string poll_id = 1;
}

message ChoicesResponse {
    string title = 1;
    repeated Choice choices = 2;
}

message RankedChoice {
    int32 rank = 1;
    Choice choice = 2;
}

message Choice{
    int32 number = 1;
    string content = 2;
    string url = 3;
}

message Organization {
    string name = 1;
    string external_id = 2;
}

message Poll {
    string id = 1;
    string external_id = 2;
    string title = 3;
    Organization organization = 4;
    Voter creator = 5;
    bool has_ended = 6;
    int64 expires = 7;
    repeated Voter voters = 8;
}

message EndPollRequest {
    string id = 1;
}

message EndPollResponse {
    Poll poll = 1;
}

message OpenPollRequest {
    string id = 1;
    int64 expires = 2;
}

message OpenPollResponse {
    Poll poll = 1;
}

message Voter {
    string name = 1;
    string external_id = 2;
}

message BallotOption {
    int32 number = 1;
    int32 rank = 2;
}

message VoteRequest {
    repeated BallotOption options = 1;
}

message VoteResponse {
    repeated RankedChoice choices = 1;
}

message VoteResponseOption {
    int32 rank = 1;
    Candidate candidate = 2;
}

message CountRequest {
    string poll_id = 1;
    int32 seats = 2;
}

message ElectedCandidate {
    int32 rank = 1;
    string name = 2;
}

message CountResponse {
    string title = 1;
    int32 candidates = 2;
    int32 ballots = 3;
    string method = 4;
    repeated ElectedCandidate elected = 5;
    string report = 6;
}

message ExportRequest {
    string poll_id = 1;
    int32 seats = 2;
    repeated int32 withdrawn = 3;
}

message ExportResponse {
    string blt = 1;
}